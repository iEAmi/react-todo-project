{"version":3,"sources":["funcBased/components/TodoItem.module.css","funcBased/components/TodoItem.js","funcBased/components/TodoList.js","funcBased/components/Header.js","funcBased/components/InputTodo.js","funcBased/pages/SinglePage.js","funcBased/pages/About.js","funcBased/pages/NoMatch.js","funcBased/components/Navbar.js","funcBased/components/TodoContainer.js","index.js"],"names":["module","exports","TodoItem","props","useState","editing","setEditing","useEffect","console","log","todo","id","title","completed","viewMode","editMode","display","className","style","item","onDoubleClick","e","type","checkbox","checked","onChange","handleChangeProps","fontStyle","color","opacity","textDecoration","onClick","deleteTodoProps","textInput","value","updateTodo","target","onKeyDown","event","key","TodoList","todos","map","Header","TodoInput","setTitle","onSubmit","preventDefault","trim","addTodoItem","alert","placeholder","name","SinglePage","slug","useParams","description","find","About","useRouteMatch","url","path","to","NoMatch","Navbar","navbarOpen","setNavbarOpen","closeMenu","Fragment","pre","width","height","text","link","activeClassName","exact","TodoContainer","temp","localStorage","getItem","JSON","parse","getInitialTodos","setTodos","stringify","setItem","newTodo","uuidv4","preState","filter","newTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2b47926.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__3zsvz\",\"checkbox\":\"TodoItem_checkbox__25-YQ\",\"textInput\":\"TodoItem_textInput__1q5ev\"};","import React, { useState, useEffect } from \"react\"\nimport style from \"./TodoItem.module.css\"\nimport { FaTrash } from \"react-icons/fa\"\n\nconst TodoItem = props => {\n  const [editing, setEditing] = useState(false)\n\n  const handleEdit = e => {\n    setEditing(true)\n  }\n\n  const handleUpdateDone = event => {\n    if (event.key === \"Enter\") {\n      setEditing(false)\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      console.log(\"Cleaning up...\")\n    }\n  }, [])\n\n  const completedStyle = {\n    fontStyle: \"italic\",\n    color: \"#595959\",\n    opacity: 0.4,\n    textDecoration: \"line-through\",\n  }\n\n  const { id, title, completed } = props.todo\n\n  let viewMode = {}\n  let editMode = {}\n\n  if (editing) {\n    viewMode.display = \"none\"\n  } else {\n    editMode.display = \"none\"\n  }\n\n  return (\n    <li className={style.item}>\n      <div onDoubleClick={handleEdit} style={viewMode}>\n        <input type=\"checkBox\"\n          className={style.checkbox}\n          checked={completed}\n          onChange={() => props.handleChangeProps(id)} />\n        <span style={completed ? completedStyle : null}>\n          {title}\n        </span>\n        <button onClick={() => props.deleteTodoProps(id)}><FaTrash /></button>\n      </div>\n\n      <input type=\"text\"\n        className={style.textInput}\n        style={editMode}\n        value={title}\n        onChange={e => props.updateTodo(e.target.value, id)}\n        onKeyDown={handleUpdateDone} />\n    </li>\n  )\n}\n\nexport default TodoItem\n","import React from \"react\"\nimport TodoItem from \"./TodoItem\"\n\nconst TodoList = props => {\n  return (\n    <ul>\n      {props.todos.map(todo => (\n        <TodoItem key={todo.id} todo={todo}\n          handleChangeProps={props.handleChangeProps}\n          deleteTodoProps={props.deleteTodoProps}\n          updateTodo={props.updateTodo} />\n      ))}\n    </ul>\n  )\n}\n\nexport default TodoList\n","import React from \"react\"\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>todos</h1>\n    </header>\n  )\n}\n\nexport default Header\n","import React, { useState } from \"react\"\nimport { FaPlusCircle } from \"react-icons/fa\"\n\nconst TodoInput = (props) => {\n  const [title, setTitle] = useState(\"\")\n\n  const onChange = (e) => {\n    setTitle(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (title.trim()) {\n      props.addTodoItem(title)\n      setTitle(\"\")\n    } else {\n      alert(\"Please write a title\")\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form-container\">\n      <input type=\"text\"\n        placeholder=\"Add todo ...\"\n        value={title}\n        name=\"title\"\n        onChange={onChange} />\n      <button className=\"input-submit\"><FaPlusCircle /></button>\n    </form>\n  )\n}\n\nexport default TodoInput\n","import React from \"react\"\nimport { useParams } from \"react-router-dom\"\n\nconst SinglePage = () => {\n  const aboutData = [\n    {\n      slug: \"about-app\",\n      title: \"About the App\",\n      description:\n        \"In this app, you can add, delete, submit and edit items. To edit items, simply double click on it. Once you are done, press the enter key to resubmit. This app will persist your data in the browser local storage. So whether you reload, close your app or reopened it, you still have access to your to-dos items.\",\n    },\n    {\n      slug: \"about-author\",\n      title: \"About the Author\",\n      description:\n        \"This app was developed by Ibas Majid, a self-taught web developer and a technical writer. He is opened to freelance Gig. So go ahead and connect with ibas on Twitter @ibaslogic.\",\n    },\n  ]\n\n  const { slug } = useParams()\n  const { title, description } = aboutData.find(item => item.slug === slug)\n\n  return (\n    <div>\n      <h1>{title}</h1>\n      <p>{description}</p>\n    </div>\n  )\n}\nexport default SinglePage\n","import React from \"react\"\nimport { useRouteMatch, Link, Route } from \"react-router-dom\"\nimport SinglePage from \"./SinglePage\"\n\nconst About = () => {\n  const { url, path } = useRouteMatch()\n  return (\n    <div>\n      <ul>\n        <li>\n          <Link to={`${url}/about-app`}>About App</Link>\n        </li>\n\n        <li>\n          <Link to={`${url}/about-author`}>About Author</Link>\n        </li>\n      </ul>\n      <Route path={`${path}/:slug`}>\n        <SinglePage />\n      </Route>\n    </div>\n  )\n}\n\nexport default About\n","import React from \"react\"\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <h3>No match for this page</h3>\n    </div>\n  )\n}\n\nexport default NoMatch\n","import React, { useState } from \"react\"\nimport { NavLink, Route } from \"react-router-dom\"\nimport { MdClose } from \"react-icons/md\"\nimport { FiMenu } from \"react-icons/fi\"\n\nconst Navbar = () => {\n  const [navbarOpen, setNavbarOpen] = useState(false)\n\n  const links = [\n    {\n      id: 1,\n      path: \"/\",\n      text: \"Home\",\n    },\n    {\n      id: 2,\n      path: \"/about\",\n      text: \"About\",\n    },\n  ]\n\n  const handleToggle = () => {\n    setNavbarOpen(pre => !pre)\n  }\n\n  const closeMenu = () => {\n    setNavbarOpen(false)\n  }\n\n  return (\n    <React.Fragment>\n      <button onClick={handleToggle}>\n        {navbarOpen ? (\n          <MdClose style={{ color: \"#fff\", width: \"40px\", height: \"40px\" }} />\n        ) : (\n          <FiMenu style={{ color: \"#7b7b7b\", width: \"40px\", height: \"40px\" }} />\n        )}\n      </button>\n      <nav className={`menuNav ${navbarOpen ? \"showMenu\" : \"\"}`}>\n        <ul>\n          {links.map(link => {\n            return <li key={link.id}>\n              <NavLink\n                to={link.path}\n                activeClassName=\"active-link\"\n                exact\n                onClick={closeMenu}>{link.text}</NavLink>\n            </li>\n          })}\n        </ul>\n      </nav>\n    </React.Fragment>\n  )\n}\nexport default Navbar\n","import React, { useState, useEffect } from \"react\"\nimport TodoList from \"./TodoList\"\nimport Header from \"./Header\"\nimport TodoInput from \"./InputTodo\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport { Route, Switch } from \"react-router-dom\"\nimport About from \"../pages/About\"\nimport NoMatch from \"../pages/NoMatch\"\nimport Navbar from \"./Navbar\"\n\nconst TodoContainer = (props) => {\n  const [todos, setTodos] = useState(getInitialTodos())\n  const handleChange = (id) => {\n    setTodos(preState =>\n      preState.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed\n          }\n        }\n        return todo\n      })\n    )\n  }\n\n  const deleteItem = id => setTodos(preState => preState.filter(todo => todo.id !== id))\n\n  const addTodoItem = title => {\n    const newTodo = {\n      id: uuidv4(),\n      title: title,\n      completed: false\n    }\n\n    setTodos(preState => [...preState, newTodo])\n  }\n\n  const updateTodo = (newTitle, id) => {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          return { ...todo, title: newTitle }\n        }\n        return todo\n      }))\n  }\n\n  useEffect(() => {\n    const temp = JSON.stringify(todos)\n    localStorage.setItem(\"todos\", temp)\n  }, [todos])\n\n  return (\n    <React.Fragment>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\">\n          <div className=\"container\">\n            <div className=\"inner\">\n              <Header />\n              <TodoInput addTodoItem={addTodoItem} />\n              <TodoList\n                todos={todos}\n                handleChangeProps={handleChange}\n                deleteTodoProps={deleteItem}\n                updateTodo={updateTodo} />\n            </div>\n          </div>\n        </Route>\n\n        <Route path=\"/about\">\n          <About />\n        </Route>\n\n        <Route path=\"*\">\n          <NoMatch />\n        </Route>\n      </Switch>\n    </React.Fragment>\n  )\n}\n\nfunction getInitialTodos() {\n  // getting stored items\n  const temp = localStorage.getItem(\"todos\")\n  const savedTodos = JSON.parse(temp)\n  return savedTodos || []\n}\n\nexport default TodoContainer\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport TodoContainer from \"./funcBased/components/TodoContainer\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\n\nimport \"./funcBased/App.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <TodoContainer />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}